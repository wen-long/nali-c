#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import urllib.request
import struct
import zlib
import datetime
import os.path
import hashlib


qqwrypath = '/usr/local/share/QQWry.Dat'
thisfile = os.path.abspath(__file__)
md5hash = 'ae44341e56953b29529438968d8951a4'

#检查是否需要更新
def check(newmd5):
	global qqwrypath
	global md5hash

	needupdate = True
	if os.path.exists(qqwrypath):
		if newmd5 == md5hash:
			needupdate = False

	return needupdate


#更新本文件中的md5hash
def updatemd5(newmd5):
	global thisfile

	print('Begin update md5sum......')
	with open(thisfile) as f:
		lines = f.readlines()

	for line in lines:
		if line.startswith('md5hash'):
			lines[lines.index(line)] = 'md5hash = \'{}\'\n'.format(newmd5)
			break

	with open(thisfile, 'w') as f:
		f.writelines(lines)

	print('Update md5sum over')


#更新QQWry.Dat
def updateipdate(key):
	global qqwrypath

	print('Begin update QQWry.Dat......')
	with urllib.request.urlopen("http://update.cz88.net/ip/qqwry.rar") as f:
		qqwry = f.read()

	ciphertext = bytearray(qqwry[:0x200])

	for i in range(0x200):
		key = key * 0x805
		key = key + 1
		key = key & 0xFF
		ciphertext[i] = qqwry[i] ^ key

	qqwry = bytes(ciphertext) + qqwry[0x200:]
	qqwry = zlib.decompress(qqwry)

	with open(qqwrypath, 'wb') as filesave:
		filesave.write(qqwry)

	print('Update QQWry.Dat over, have a nive day')


def main():
	global md5hash

	with urllib.request.urlopen("http://update.cz88.net/ip/copywrite.rar") as f:
		copywrite = f.read()
	key = struct.unpack('<L',copywrite[20:24])[0]   #解密需要的一个key
	newmd5 = hashlib.md5(copywrite).hexdigest()   #服务器copywrite.rar的MD5

	if check(newmd5):
		print('New version found')        
		updateipdate(key)
		updatemd5(newmd5)
	else:
		print('Already latest version, are you ok?')

if __name__ == '__main__':
	main()